  _______ _    _ ______    _____          __  __ ______ _____  _  _____        _ _    _ _____ _____ ______   ____   ______   __
 |__   __| |  | |  ____|  / ____|   /\   |  \/  |  ____|  __ \( )/ ____|      | | |  | |_   _/ ____|  ____| |  _ \ / __ \ \ / /
    | |  | |__| | |__    | |  __   /  \  | \  / | |__  | |__) |/| (___        | | |  | | | || |    | |__    | |_) | |  | \ V / 
    | |  |  __  |  __|   | | |_ | / /\ \ | |\/| |  __| |  _  /   \___ \   _   | | |  | | | || |    |  __|   |  _ <| |  | |> <  
    | |  | |  | | |____  | |__| |/ ____ \| |  | | |____| | \ \   ____) | | |__| | |__| |_| || |____| |____  | |_) | |__| / . \ 
    |_|  |_|  |_|______|  \_____/_/    \_\_|  |_|______|_|  \_\ |_____/   \____/ \____/|_____\_____|______| |____/ \____/_/ \_\
	
This is a video game catalog web application developed for Miami University's CSE 201 (Intro to Software Engineering) course during the Spring 2020 semester.

================
    Running
================
To run this app, you first need Node.js installed on your machine. After installing Node.js, navigate to the root
directory of this project on your machine and run the command "npm install". This will install all of the dependencies
for the project. To run a test server, use the command "npm run dev". This will start a local server on port 3000.
If you want to build a production server, run "npm run build" to bundle the project into the __sapper__/build directory.
You can use "npm run start" to start this server after building.

NOTE: Currently, this app uses a local database to store data. If you would like to use the full functionality of the app,
you will need a SQL Server instance running on your machine. You can then modify the options provided to the pool at the top
of src/routes/_dbApi.js to fit your instance.

================
  Sapper Files
================
The below files are files required by Sapper, the server middleware we use to run our app. They are located in the src directory.
In most cases, these files will not require modification.

client.js
Contains code that sets up Sapper to run on the client side (i.e. web browser).

service-worker.js
Contains service workers, which act as proxies between the client and server in order to control responses to network requests.

server.js
Contains code that sets up the web server.

template.html
An HTML template used for every page served by the server.

================
###components###
================

CommentDisplay.svelte
Handles the display of comments on each game page.

GameDisplay.svelte
The display for each game on the browse page.

header.svelte
Code for the header bar.

viewRequestDisplay.svelte
Displays user game requests for admins.

============
###routes###
============

[commentId].svelte
Handles the display and manipulation of individual comments.

[gameId].json.js
Handles method for comments for specific games.

[gameId].svelte
Page that displays all the information for a game and the comments left associated with it.

index.js
Handles creating, editing, deleting comments

_dbApi.js
Database API to run on server for storing games, comments, users.

_games.js
Temporary list of dummy data filled with games.

_layout.svelte
default svelte file

browse.svelte
The browse page, handles sorting, filtering, sorting games that are displayed.

gameBrowse.js
Function calls for the browse page.

games.js
Function call fo the sql database to retrieve games from the db.

index.svelte
Default home page for the site.

login.js
Handles function call fo the log in page.

login.svelte
Login page.

logout.js
Handles log out function and redirects to home page.

register.js
Handles data when registering account.

register.svelte
Page for registering account.

request.svelte
Page for submitting request for new games to be added to the database.

viewRequests.svelte
Page for admins to view all game requests and either approve or deny the requests.
